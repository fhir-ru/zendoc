^hide
:menu-order 101

^hide
:icon [:fa :fa-graduation-cap] 

:title "Как добавить расширение простому типу данных"

^badge
:editors [people.alexandra people.vrodionov]

^badge
:date:updated "2022-07-03"

^title "Оглавление"
:content-list md/ 

:toc

^title "Инструкция"
:tutorial md/

Задача: определить профиль для ресурса `Пациент`, добавив для атрибута `Пол` расширение для кодирования по справочнику ФНСИ.

Как добавлять расширения элементам примитивного типа данных - см.[2.6.2.3 JSON representation of primitive elements](https://build.fhir.org/json.html#primitive).

^title "Naming System"
:tutorial:namingsystem md/

Почему NamingSystem, а не CodeSystem - см. #systems.

* 1) Создаём определение NamingSystem для справочника ФНСИ - "Пол пациента" (https://nsi.rosminzdrav.ru/#!/refbook/1.2.643.5.1.13.13.11.1040):

* в папке `docs/systems` создаем файл, название которого соответствует пункту "терминологии" соглашения conventions.
* в файле по шаблону #systems.ns-template заполняем атрибуты. В данном случае кроме своего идентификатора даем ссылку на OID НСИ ЕГИСЗ
* получаем следующий текст:

```code json
{
  "id": "core-ns-nsi-gender",
  "resourceType": "NamingSystem",  
  "status": "active",    
  "kind": "codesystem",
  "name": "CoreNsiGender",
  "description": "НСИ Минздрава Пол пациента",
  "text": {
    "div": "<div xmlns='http://www.w3.org/1999/xhtml'>CodeSystem: НСИ Минздрава Пол пациента, 
    может быть известен под следующими идентификаторами:<ol>\n    <li>OID: 1.2.643.5.1.13.13.11.1040</li>\n   
     <li>[предпочтительно] URI: http://fhir.ru/core/systems/gender</li>\n  </ol>\n</div>",
    "status": "generated"
  },
  "uniqueId": [
    {
      "type": "oid",
      "value": "1.2.643.5.1.13.13.11.1040"
    },
    {
      "type": "uri",
      "preferred": true,
      "value": "http://fhir.ru/core/systems/gender",
    }
  ]
}
```

* результат на нашем сайте: #systems.cs-rosminzdrav-gender
* прототип в инструментах FHIR - [[a https://docs.miramedix.ru/fhir/IG/CodeSystem-nsi-cs-1-2-643-5-1-13-13-11-1040.html]]

^title "ValueSet"
:tutorial:valueset md/

* 2) Создаём определение набора значений из этого справочника (по шаблону #valuesets.template):

```code json
{
  "resourceType": "ValueSet",
  "id": "core-vs-nsi-gender",
  "name": "CoreVsNsiGender",
  "title": "Core ValueSet Пол пациента",
  "url" : "http://fhir.ru/core/vs/core-vs-nsi-gender",
  "status": "active",
  "compose": {
    "include": [
      {
        "system": "http://fhir.ru/core/systems/nsi-gender",
        "concept": [
          {
            "code": "1",
            "display": "Мужской"
          },
          {
            "code": "2",
            "display": "Женский"
          },
          {
            "code": "3",
            "display": "Неопределенный"
          }
        ]
      }
    ]
  }
}
```
и соответствующую zen-схему

```code edn
{ns fhir.ru.core.vs-nsi-gender
 import #{fhir zen.fhir}

 CoreVsNsiGender
 {:zen/tags #{zen.fhir/value-set}
  :zen/desc "Справочник НСИ Минздрава Пол пациента"
  :zen.fhir/version "0.5.8"
  :fhir/code-systems
  #{{:fhir/url "https://nsi.rosminzdrav.ru/#!/refbook/1.2.643.5.1.13.13.11.1040",
     :zen.fhir/content :not-present}},
  :uri "http://fhir.ru/core/vs/core-vs-nsi-gender"
  :version "2.1"
  :zendoc "artifacts.valuesets.core-vs-nsi-gender"}}
```

* результат на нашем сайте: #valuesets.vs-administrative-gender
* прототип в инструментах FHIR - [[a https://docs.miramedix.ru/fhir/IG/ValueSet-nsi-vs-1-2-643-5-1-13-13-11-1040.html]]

^title "Extension"
:tutorial:extension md/

* 3) Создаём определение расширения для кодирования пола пациента по справочнику ФНСИ:

```code edn
{ns fhir.ru.core.ext-nsi-gender

 import #{fhir zen.fhir fhir.ru.core.vs-nsi-gender/CoreVsNsiGender}

 CoreNsiGender
 {:zen/tags #{zen/schema zen.fhir/structure-schema zen.fhir/extension}
  :zen.fhir/type "Coding"
  :zen.fhir/profileUri "http://fhir.ru/core/sd/core-ex-nsi-gender"
  :type zen/map
  :zen/desc "Кодирование пола по справочнику ФНСИ"
  :zen.fhir/version "0.5.8"
  :confirms #{fhir/Coding}
  :zen.fhir/value-set
  {:symbol fhir.ru.core.vs-nsi-gender/CoreVsNsiGender
   :strength :required}
  :zendoc "artifacts.extensions.ext-nsi-gender"}}
```
* и страницу для вывода схемы и дополнительной документации - в папке `docs/extension` создаем файл с расширением `.zd`, название которого соответствует пункту "терминологии" соглашения conventions
* выводим схему на странице документации:

```code zendoc
^title "Расширение"
^zen/schema
:profile fhir.ru.core.ext-nsi-gender/CoreNsiGender
```

* результат на нашем сайте: #extension.ext-nsi-gender
* прототип в инструментах FHIR - [[a https://docs.miramedix.ru/fhir/IG/StructureDefinition-fhir-ru-ext-nsi-gender.html]]

^title "Profile"
:tutorial:profile md/

* 4) Создаём профиль для ресурса `Пациент` с добавленным расширением для кодирования пола пациента по справочнику ФНСИ:

```code edn
{ns fhir.ru.core.tutorial-patient

 import #{fhir
          zen.fhir
          fhir.ru.core.ext-nsi-gender}

 TutorialPatient
 {:zen/tags #{zen.fhir/profile-schema zen/schema}
  :zen/desc "Пациент"
  :zen.fhir/version "0.5.8"
  :confirms #{fhir/Patient}
  :zen.fhir/id "tutorial-patient"
  :zen.fhir/name "TutorialPatient"
  :zen.fhir/type "Patient"
  :zen.fhir/profileUri "http://fhir.ru/core/sd/tutorial-patient"
  :type zen/map
  :keys {:_gender {:zen/desc "Пол пациента по справочнику НСИ"
                   :type zen/map
                   :confirms #{fhir/Element}
                   :keys {:nsiGender {:confirms #{fhir.ru.core.ext-nsi-gender/CoreNsiGender}
                                      :type zen/map
                                      :zen/desc "Расширение: Пол пациента по справочнику НСИ, vs:http://fhir.ru/core/vs/core-vs-nsi-gender"
                                      :fhir/extensionUri "http://fhir.ru/core/sd/core-ex-nsi-gender"}}}}}}
```

результат - [[a https://docs.miramedix.ru/fhir/IG/StructureDefinition-fhir-ru-patient-gender.html]]

:tutorial:example md/

* 5) Создаём пример ресурса, соответствующего данному профилю:

^tabs
:tabs-example
^tab-title
~:json:title "JSON"
^tab-content
~:json:content md/

```code json
{
  "name": [
    {
      "use": "official",
      "given": [
        "BARBARA",
        "A"
      ],
      "family": "KENNEDY"
    }
  ],
  "gender": "female",
  "_gender": {
    "nsiGender": {
      "system": "http://fhir.ru/core/systems/nsi-gender",
      "code": "2",
      "display": "Женский"
    }
  },
  "birthDate": "1961-03-03",
  "address": [
    {
      "city": "Москва",
      "line": [
        "Арбат"
      ],
      "state": "MO",
      "country": "РФ",
      "postalCode": "64083"
    }
  ]
}
```

^tab-title
~:yaml:title "YAML"
^tab-content
~:yaml:content md/

```code yaml
name:
  - use: official
    given:
      - BARBARA
      - A
    family: KENNEDY
gender: female
_gender:
  nsiGender:
    system: "http://fhir.ru/core/systems/nsi-gender"
    code: "2"
    display: Женский
birthDate: "1961-03-03"
address:
  - city: Москва
    line:
      - Арбат
    state: MO
    country: РФ
    postalCode: "64083"
```

результат - https://docs.miramedix.ru/fhir/IG/Patient-fhir-ru-patient-instance-konstantinopolskaya-gender.html

^title "Валидация"
:tutorial:validation md/

* 6) Проверяем пример ресурса на соответстветствие данному профилю (валидация на табе Validate):

^title "Validation"
^zen/schema
:tutorial:validation:profile-validation fhir.ru.core.tutorial-patient/TutorialPatient

^title "Шаблоны"
:templates

^title "Ресурс"
^edn
:templates:resource-profile  (load "../../zrc/fhir/ru/support/resource-template.edn" :edn)

^title "Расширение"
^edn
:templates:extension (load "../../zrc/fhir/ru/support/extension-template.edn" :edn)

^title "Набор значений"
^edn
:templates:valueset (load "../../zrc/fhir/ru/support/valueset-template.edn" :edn)

^title "Тип данных"
^edn
:templates:datatype (load "../../zrc/fhir/ru/support/datatype-template.edn" :edn)

^title "Привязка элемента к набору значений"
:templates:valueset-binding md/

```code edn
  :zen.fhir/value-set {:symbol CoreVsIdentifierType :strength :extensible}
```

^title "Slicing"
:templates:slicing md/

```code edn
  :type zen/vector
  :slicing
    {:slices
      {"PassportRF"
      {:zen/desc "Паспорт РФ"
        :filter
        {:engine :match
        :match {:type {:coding #{{:code "PPN"
                                  :display "Passport number"
                                  :system "http://terminology.hl7.org/CodeSystem/v2-0203"}}}}}
        :schema {:type zen/vector
                :maxItems 1
                :every {:type zen/map
                        :confirms #{fhir/Identifier}
                        :keys {:type {:type zen/map
                                      :confirms #{SchemaPassportRF}
                                      :zen/desc "Тип идентификатора"}}}}}}}
```

^title "Добавить новый тэг"
:templates:new-tag md/

Открыть файл `zrc/zen/fhir.edn` и добавить новый тэг:

```code edn
 lab-group
 {:zen/tags #{zen/schema zen/tag}
  :zen/desc "Lab Group"}
```

Затем открыть соответствующие схемы и добавить им новый тэг в список тэгов:

```code edn
  :zen/tags #{zen/schema zen.fhir/profile-schema zen.fhir/lab-group}
```