:title "Zendoc-инструкция"

^hide
:icon [:fa :fa-graduation-cap] 

^hide
:menu-order 100

^badge
:editors #{people.alexandra people.varvara}

^badge
:status "in progress"

^title "Оглавление"
:content-list md/ 

:toc

^title "Введение в Zendoc"
:introduction md/

Zendoc — это данные, аннотированные так, чтобы они выглядели как структурированный динамический текст, который может использовать другие данные.

Каждый документ — это данные. Назовем это ресурсом.
Ресурс — это упорядоченный набор ключей  и значений (map в терминах clojure).

Ключи верхнего уровня начинаются с новой строки с `:`, потом указывается их значение в EDN через пробел, например `:this-is-a-key "value"`.

Ресурс хранится в базе данных и может быть доступен по имени или с помощью фильтра.

Каждый документ получает свое имя от пути в файловой системе, начиная от корня проекта. 
Это имя в качестве символа может использоваться для ссылки на документ/ресурс. 
Например путь [[code mywiki/people/niquola.zd]] будет переведен в имя [[code mywiki.people.niquola]].

Каждый документ в zendoc состоит из последовательности ключей (keypaths), значений и аннотаций.
Ключ может иметь аннотацию (метаданные), например `^badge`.
Благодаря аннотации данные отображаются в определенном виде.

Для многострочности используется специальная нотация, которая начинается с `:key /md` и заканчивается новой строкой с ключом или аннотацией.

@niquola представляет zendoc: [видео 15 мин](https://www.youtube.com/watch?v=_thVrYW2FeQ).

Все пожелания по улучшению Zendoc и наполнению контентом этой страницы можно оставлять тут — [[d 132]].

^title "Иконки"
:icons md/

К главному заголовку можно добавить иконку.

Иконки можно выбрать [здесь](https://fontawesome.com/search?q=comments&s=solid%2Cbrands%2Cregular%2Clight%2Cthin%2Cduotone).

```code edn
  :icon [:fa :fa-graduation-cap] 

```

^title "Вывод оглавления"
:content-list md/ 

Оглавление можно добавить через `:toc`.

^title "Картинки"
:images md/

Картинку можно положить в репозиторий или сослаться по ссылке.

Чтобы картинка отрисовалась, можно использовать анатацию [[code ^img]].

```code edn
  ^img
  :image "https://www.hl7.org/fhir/conformance.jpg"

  ^img
  :image "local.webp"


  :image-in-text md/

      Можно вставить картинку в текст [[img local.webp]] или ![](local.webp)
```

__Результат:__

^img
:images:image "https://www.hl7.org/fhir/conformance.jpg"


:images:image-in-text md/

Можно вставить картинку в текст [[img https://www.hl7.org/fhir/conformance.jpg]]
или ![](https://www.hl7.org/fhir/conformance.jpg).


^title "Аннотации"
:annotation md/

Аннотация — это подсказка, которая позволяет интепретатору понять, как рисовать содержимое ключа, например `^badge`.

Аннотация подвязывается к ключу:

```code
    ^badge
    :any-key "value"

```

**Список аннотаций:**

* `^collapse` — свернуть данные под заголовок

* `^badge` — прикрепляется как лейбел вверху страницы

* `^title` — отрисовать заданный заголовок

* `^link-badge` — маленький бейджик, внутри которого будет ссылка; то же, что и badge

* `^href / link` — способ отрисовать ссылки

* `^img` — вставить картинку

* `^table` — отрисовка таблицы

* `^hide` — не отрисует данные

* `^yaml` — отрисовать yaml-код с подсветкой

* `^edn` — отрисовать edn-код с подсветкой

* `^video` — вставить видео

* `^zen/schema` — способ отрисовать zen schema в виде дерева, например для вывода профиля на странице документации

* `^disc` — ссылка на дискуссию в GitHub

^title "Текст"
:zentext md/

* Можно сослаться на человека: [[code @niquola]] — @niquola
* Можно сослаться на документ: [[code #manifest]] — #manifest
* Можно вставить код: [[code `code()`]] — `code()`
* Можно вставить код: `[[code code()]]` — [[code code()]]
* Выделить жирным: `**bold**` — **bold**
* Выделить курсивом: `__italic__` — __italic__
* Можно вставить ссылку: `[text](link)` — [text](link)
* Сослаться на поле в ресурсе: `((resource people.niquola :telegram))` — ((resource people.niquola :telegram))

^title "Заголовки"
:zentext:title md/

```
    ^title "Текст"
    :zentext md/

    подзаголовок (вложенный заголовок) можно задать с помощью вложенных ключей:

    ^title "Списки"
    :zentext:lists md/
```


^title "Списки"
:zentext:lists md/

Списки начинаютя с `*`. Вложенные списки с префиксом `..`.


```
* list 1 multi line
* list 2
..* sub item 1
..* sub item 2
* list 3
```


__Результат:__
* list 1 multi line
* list 2
..* sub item 1
..* sub item 2
* list 3


Пронумерованные списки начинаются с `1)`. Вложенные с `..`.


```
1) item 1
2) item 2
..1) sub item
..1) another
3) item 3

```

__Результат:__
1) item 1
2) item 2
..1) sub item
..1) another
3) item 3
  
^title "Таблицы"
:tables md/

^title "Через блок кода"
:tables:code md/

Таблицу можно встроить с помощью блока [[code ```table]]:

```code
  ```table
  name    | email       | phone
  niquola | niq.com     | +7897989 
  mary    | mary.com | +7897555 
  ```
```

__Результат:__

```table
name | email | phone
niquola | niq.com | +7897989 
mary | mary.com | +7897555 
```

^title "Через аннотацию ^table"
:tables:table md/

Еще таблицу можно записать с помощью — `^table{:key[{:column1 "value1" :column2 "value2"}]`

```code
  ^table
  :table-contacts
  [{:name "niquola":email "niq.com":phone "+7897989"} 
  {:name "mary":email "mary.com":phone "+7897555"}]
```

__Результат:__

^table
:tables:code:contacts
[{:name "niquola" :email "niq.com" :phone "+7897989"} 
{:name "mary" :email "mary.com" :phone "+7897555"}]

^title "Через аннотацию ^table-of"
:tables:table-of md/

Способ вывести какие-то сущности:

Пример

```code
  ^table-of {:namespace "people." :columns [:zd/name :role :telegram :github]}
  :people
```

__Результат:__

^table-of {:namespace "people." :columns [:zd/name :role :telegram :github]}
:tables:table-of:people

^title "Код"
:code md/

^title "Блоки кода"
:code:blocks md/

Блок с кодом можно записать как [[code ```code]]

Список языков —  [[a https://github.com/highlightjs/highlight.js/blob/main/SUPPORTED_LANGUAGES.md здесь]]

```code
  ```code json
   {"a" : 1}
  ```
```


__Результат:__
```code json
{"a" : 1}
```

^title "Вкладки"
:code:tabs md/

Вкладки можно вставить с помощью блоков с аннотациями, где
`tabs` — контейнер, `tab-title` — название вкладки, `tab-content` — ее содержимое,
путь задает саму вкладку, он обязательно должен быть внутри контейнера.

Пример:

```code edn
    ^tabs
    :tabs-example
    ^tab-title
    ~:json:title "JSON"
    ^tab-content
    ~:json:content md/

    **Hello**

    ```code json
        {"key": "value"}
    ```

    ^tab-title
    ~:yaml:title "YAML"
    ^tab-content
    ~:yaml:content "not written yet"
```

^tabs
:tabs-example
^tab-title
~:json:title "JSON"
^tab-content
~:json:content md/

**Hello**

```code json
    {"key": "value"}
```

^tab-title
~:yaml:title "YAML"
^tab-content
~:yaml:content "not written yet"

^title "Код из файла"
:code:code-from-files md/

```
  ^yaml
  ^title "Пример"
  :samples:one  (load "../core/samples/org-1.yaml" :yaml)
```

Код можно свернуть:

```
  ^yaml
  ^collapse
  ^title "Пример 2"
  :samples:one (load "../core/samples/org-1.yaml" :yaml)
```

^yaml
^title "Пример 1"
:code:code-from-files:sample1 (load "../core/samples/org-1.yaml" :yaml)

^yaml
^collapse
^title "Пример 2"
:code:code-from-files:sample2 (load "../core/samples/org-1.yaml" :yaml)

^disc 45
^title "GitHub-дискуссии"
:discussion md/

Можно добавить ссылку на дискуссию либо к заголовку, либо в теле текста [[d 45]]

```code edn
  ^disc 45
  :discussion md/

  Можно добавить ссылку на дискуссию либо к заголовку либо в теле текста [[d 45]]

```

:markdown markdown/

```code markdown
  :markdown markdown/

  Вы можете использовать [markdown](markdown) — но лучше zentext

  * item-1
  * item-2

```

Вы можете использовать [markdown](markdown) — `:key markdown/` 

* item-1
* item-2

^title "Диаграммы"
:diagrams md/

^title "Диаграмма связей"
:diagrams:mindmap-code md/

```code edn
  :mindmap:sample mindmap/

  zendoc
  * semantic web
    * resources
    * attributes
    * machine readable
  * knowlege base
    * database
    * links
    * back links
  * zen-lang
    * schema
  * clojure
    * EDN
      * symbols for links
    * hiccup
      * ad-hock markup
    * extension
```

^title "Пример диаграммы связей"
:diagrams:mindmap-code:mindmap-sample mindmap/
zendoc
* semantic web
  * resources
  * attributes
  * machine readable
* knowlege base
  * database
  * links
  * back links
* zen-lang
  * schema
* clojure
  * EDN
    * symbols for links
  * hiccup
    * ad-hock markup
  * extension

^title "Диаграмма"
:diagrams:description md/

Для отображения в виде диаграммы нужно использовать нотацию `:any-key mm/ flowchart` 
```code edn
    :diagram mm/
    flowchart TB
    zendoc-->document
    zendoc-->resource
    resource-->db
    document-->db
    db[(Database)]
```

^title "Пример диаграммы"
:diagrams:description:diagram mm/
flowchart
zendoc-->document
zendoc-->resource
resource-->db
document-->db
db[(Database)]


