^hide
:icon [:fa :fa-graduation-cap] 

^hide
:menu-order 101

:title "Zen profiling"

:summary md/

Краткое введение в zen

:project md/

Zen-проект - это папка, в которой каждый файл - это **namespace**.
Имя **namespace** можно получить, заменив `/` на `.` в отностельном пути файла.

Например, `fhir/ru/patient.edn` => `fhir.ru.patient`.

:namespace md/

**namespace** - это структура данных в формате [edn](https://github.com/edn-format/edn),
а точнее это всегда **map** (словарь, объект),, состоящий из ключей и значений.

```code edn
{ns fhir.ru.patient

 import #{fhir.v4}

 Patient
 {:zen/tags #{zen/schema}
  :confirms #{fhir.v4/Patient}
  :type zen/map
  :keys {}
  }

 Race
 {:zen/tags #{zen/schema}
  :type zen/map
  :keys {}
  }

 }
```

Ключ задает имя **модели**, а значение - это ее описание. Модели могут ссылаться друг на друга
в рамках namespace просто по имени `Patient`, а между namespace по полному имени `fhir.ru.patient/Patient`.
Zen явно управляет зависимостями, поэтому для того чтобы ссылаться на модели из других namespace, вам нужно сделать `import`.

^title "Модели"
:models md/

Модель в zen в общем случае - это произвольная структура данных.
Модель может быть протэгирована с помощью аттрибута `:zen/tags #{}`, значением которого является множество
символов, ссылающихся на другие модели. Тэги можно воспринимать как множественную классификацию - типы модели.

^title "Схема"
:schema md/

Zen имeет встроенный язык схем - описание структуры данных.
Модель интерпретируется как схема, если она имеет тэг `zen/schema`.

^title "Инструкция"
:tutorial-1 md/

Задача: определить профиль для ресурса `Пациент`, добавив для атрибута `Пол` расширение для кодирования по справочнику ФНСИ.

* 1) Создаём описание справочника ФНСИ - "Пол пациента" (https://nsi.rosminzdrav.ru/#!/refbook/1.2.643.5.1.13.13.11.1040):

```code json
{
  "id": "core-ns-nsi-gender",
  "resourceType": "NamingSystem",  
  "status": "active",    
  "kind": "codesystem",
  "name": "CoreNsiGender",
  "description": "НСИ Минздрава Пол пациента",
  "text": {
    "div": "<div xmlns='http://www.w3.org/1999/xhtml'>CodeSystem: НСИ Минздрава Пол пациента, 
    может быть известен под следующими идентификаторами:<ol>\n    <li>OID: 1.2.643.5.1.13.13.11.1040</li>\n   
     <li>[предпочтительно] URI: http://fhir.ru/core/systems/gender</li>\n  </ol>\n</div>",
    "status": "generated"
  },
  "uniqueId": [
    {
      "type": "oid",
      "value": "1.2.643.5.1.13.13.11.1040"
    },
    {
      "type": "uri",
      "preferred": true,
      "value": "http://fhir.ru/core/systems/gender",
    }
  ]
}
```code

результат - [[a https://docs.miramedix.ru/fhir/IG/CodeSystem-nsi-cs-1-2-643-5-1-13-13-11-1040.html]]

* 2) Создаём описание набора значений из этого справочника:

```code json
{
  "resourceType": "ValueSet",
  "id": "core-vs-administrative-gender",
  "name": "CoreVsAdministrativeGender",
  "title": "Core ValueSet Пол пациента (FHIR AdministrativeGender)",
  "url" : "http://fhir.ru/core/vs/core-vs-administrative-gender",
  "status": "active",
  "compose": {
    "include": [
      {
        "system": "http://hl7.org/fhir/administrative-gender",
        "concept": [
          {
            "code": "male"
          },
          {
            "code": "female"
          },
          {
            "code": "unknown"
          }
        ]
      }
    ]
  }
}
```code

результат - [[a https://docs.miramedix.ru/fhir/IG/ValueSet-nsi-vs-1-2-643-5-1-13-13-11-1040.html]]

* 3) Создаём описание расширения для кодирования пола пациента по справочнику ФНСИ:

```
[todo]
```

результат - [[a https://docs.miramedix.ru/fhir/IG/StructureDefinition-fhir-ru-ext-nsi-gender.html]]

* 4) Создаём профиль для ресурса `Пациент` с добавленным расширением для кодирования пола пациента по справочнику ФНСИ:

```
[todo]
```

результат - [[a https://docs.miramedix.ru/fhir/IG/StructureDefinition-fhir-ru-patient-gender.html]]

* 5) Создаём пример ресурса, соответствующего данному профилю:

```
[todo]
```

результат - https://docs.miramedix.ru/fhir/IG/Patient-fhir-ru-patient-instance-konstantinopolskaya-gender.html

* 6) Проверяем пример ресурса на соответстветствие данному профилю (валидация):

```
[todo]
```